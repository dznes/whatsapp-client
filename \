import { BaseClient } from "./base";

type BaseMessageProps = {
  type: "text" | "image" | "audio" | "location" | "contacts";
  recipient_number: string;
  content: string;
  context?: {
    message_id: string;
  };
};

interface ImageMessageProps extends BaseMessageProps {
  type: "image";
  image: {
    id?: string;
    link?: string;
  };
}

interface AudioMessageProps extends BaseMessageProps {
  type: "audio";
  audio: {
    id?: string;
    link?: string;
  };
}

interface LocationMessageProps extends BaseMessageProps {
  type: "location";
  location: {
    latitude: string;
    longitude: string;
    name: string;
    address: string;
  };
}

interface ContactMessageProps extends BaseMessageProps {
  type: "contacts";
  contacts: {
    addresses?: {
      street?: string;
      city?: string;
      zip?: string;
      country?: string;
      country_code?: string;
      type?: "HOME" | "WORK";
    }[];
    birthday?: string;
    emails?: {
      email?: string;
      type?: "HOME" | "WORK";
    }[];
    name?: {
      formatted_name?: string;
      first_name?: string;
      last_name?: string;
      middle_name?: string;
      suffix?: string;
      prefix?: string;
    };
    org?: {
      company: string;
      department: string;
      title: string;
    };
    phones?: {
      phone: string;
      wa_id: string;
      type: "HOME" | "WORK";
    }[];
    urls?: {
      url: string;
      type: "HOME" | "WORK";
    }[];
  };
}

export class MessagesClient extends BaseClient {
  private phoneId: number;
  private version: string;

  get endpoint() {
    return `${this.version}/${this.phoneId}/messages`;
  }

  constructor(token: string, version: string, phoneId: number) {
    super();
    this.token = token;
    this.version = version;
    this.phoneId = phoneId;
  }

  send({
    type,
    recipient_number,
    content,
    context,
  }:
    | BaseMessageProps
    | ImageMessageProps
    | AudioMessageProps
    | ContactMessageProps
    | LocationMessageProps) {
    return this.doRequest("POST", this.endpoint, {
      messaging_product: "whatsapp",
      recipient_type: "individual",
      to: recipient_number,
      type: type,
      context: context ?? undefined,
      text: {
        preview_url: false,
        body: content,
      },
    });
  }
  markAsRead({ message_id }) {
    return this.doRequest("POST", this.endpoint, {
      messaging_product: "whatsapp",
      status: "read",
      message_id,
    });
  }
}
